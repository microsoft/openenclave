// Copyright (c) Open Enclave SDK contributors.
// Licensed under the MIT License.

/**
 * @file relying_party.h
 *
 * This file defines the programming interface for application software
 * to access the OE SDK relying party functionality.
 *
 */

#ifndef _OE_ATTESTATION_RELYING_PARTY_H
#define _OE_ATTESTATION_RELYING_PARTY_H

#include <openenclave/bits/result.h>
#include <openenclave/bits/types.h>

OE_EXTERNC_BEGIN

/**
 * oe_parse_passport_attestation_certificate_v1
 *
 * This function parses the certificate generated by
 * oe_get_passport_attestation_certificate_v1 and outputs
 * the attestation result.
 *
 * @experimental
 *
 * @param[in] certificate_in_der A pointer to buffer holding certificate
 * contents in DER format.
 * @param[in] certificate_in_der_size The size of the buffer above.
 * @param[out] output_attestation_result_buffer A pointer to buffer
 * pointer.
 * @param[out] output_attestation_result_buffer_size A pointer to the
 * size of the buffer above.
 *
 * @retval OE_OK Successful parsing.
 * @retval OE_INVALID_PARAMETER One or more invalid parameters.
 * @retval Other appropriate error code.
 */
oe_result_t oe_parse_passport_attestation_certificate_v1(
    const uint8_t* certificate_in_der,
    size_t certificate_in_der_size,
    uint8_t** output_attestation_result_buffer,
    size_t* output_attestation_result_buffer_size);

/**
 * oe_parse_background_check_attestation_certificate_v1
 *
 * This function parses the certificate generated by
 * oe_get_background_check_attestation_certificate_v1
 * and outputs the evidence and optionally init-time custom
 * claims and run-time custom claims.
 *
 * @experimental
 *
 * @param[in] certificate_in_der A pointer to buffer holding certificate
 * contents in DER format.
 * @param[in] certificate_in_der_size The size of the buffer above.
 * @param[out] output_evidence_buffer A pointer to buffer pointer.
 * @param[out] output_evidence_buffer_size The size of the buffer above.
 * @param[out] output_inittime_custom_claims_buffer An optional pointer to
 * buffer pointer.
 * @param[out] output_inittime_custom_claims_buffer_size An optional pointer to
 * the size of the buffer above.
 * @param[out] output_runtime_custom_claims_buffer An optional pointer to buffer
 * pointer.
 * @param[out] output_runtime_custom_claims_buffer_size An optional pointer to
 * the size of the buffer above.
 *
 * @retval OE_OK Successful parsing.
 * @retval OE_INVALID_PARAMETER One or more invalid parameters.
 * @retval Other appropriate error code.
 */
oe_result_t oe_parse_background_check_attestation_certificate_v1(
    const uint8_t* certificate_in_der,
    size_t certificate_in_der_size,
    uint8_t** output_evidence_buffer,
    size_t* output_evidence_buffer_size,
    uint8_t** output_inittime_custom_claims_buffer,
    size_t* output_inittime_custom_claims_buffer_size,
    uint8_t** output_runtime_custom_claims_buffer,
    size_t* output_runtime_custom_claims_buffer_size);

OE_EXTERNC_END

#endif
