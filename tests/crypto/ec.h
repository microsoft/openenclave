// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

#ifndef _TESTS_CRYPTO_EC_H
#define _TESTS_CRYPTO_EC_H

#include <openenclave/internal/ec.h>

/**
 * Get the key coordinates from an EC public key
 *
 * This function gets the key coordinates from an EC public key. The
 * coordinates are in uncompressed format.
 *
 * @param publicKey key whose key bytes are fetched
 * @param xData the buffer where the X-coordinate bytes are written
 * @param xSize[in,out] size of xData buffer (in); size of data (out)
 * @param yData the buffer where Y-coordinate bytes are written
 * @param ySize[in,out] size of yData buffer (in); size of data (out)
 *
 * @return OE_OK upon success
 * @return OE_BUFFER_TOO_SMALL either the **xData** or **yData** are too small;
 *         **xSize** and **ySize** contain the required sizes.
 *
 */
oe_result_t oe_ec_public_key_to_coordinates(
    const oe_ec_public_key_t* publicKey,
    uint8_t* xData,
    size_t* xSize,
    uint8_t* yData,
    size_t* ySize);

/**
 * Converts a DER-encoded signature into ECDSA signature values.
 *
 * This function converts a DER-encoded signature into binary-encoded ECDSA
 * signature values (r and s). DER-encoded signatures are generated by the
 * **oe_ec_private_key_sign()** function.
 *
 * @param signature the DER-encoded signature
 * @param signatureSize the size of the signature
 * @param rData the buffer that will contain the R coordinate.
 * @param rSize[in,out] size of rData buffer (in); size of coordinate (out)
 * @param sData the buffer that will contain the S coordinate.
 * @param sSize[in,out] size of sData buffer (in); size of coordinate (out)
 *
 * @return OE_OK upon success
 * @return OE_INVALID_PARAMETER a parameter was invalid.
 * @return OE_BUFFER_TOO_SMALL either the **rData** or **sData** buffer is too
 *         small; **rSize** and **sSize** contain the required sizes on output.
 */
oe_result_t oe_ecdsa_signature_read_der(
    const uint8_t* signature,
    size_t signatureSize,
    uint8_t* rData,
    size_t* rSize,
    uint8_t* sData,
    size_t* sSize);

#endif /* _TESTS_CRYPTO_EC_H */
