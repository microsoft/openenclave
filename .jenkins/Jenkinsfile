pipeline {
  agent any
  stages {
    stage('Build and Test') {
      failFast true
      parallel {
        stage('Check pre-commit requirements') {
          agent {
            docker {
              image 'oetools-azure:1.6'
            }
          }
          steps {
            timeout(2) {
              sh './scripts/check-precommit-reqs'
            }
          }
        }
        stage('Simulation default compiler') {
          // This particular test asserts that everything (at least
          // for simulation) can be built after using our
          // install-prereqs script to bootstrap a machine.
          agent {
            dockerfile {
              filename '.jenkins/Dockerfile.scripts'
            }
          }
          steps {
            timeout(15) {
              // This is run to test that it works with the dependencies
              // installed by our install-prereqs script.
              sh './scripts/check-precommit-reqs'

              // We actually expect `ctest` to fail because it is an
              // older version that emits a failure if any tests are
              // skipped. In other stages, we explicitly install an
              // updated version of CMake.
              dir('build') {
                sh '''
                cmake ..
                make
                OE_SIMULATION=1 ctest --verbose --output-on-failure || true
              '''
                // Note that `make package` is not expected to work
                // without extra configuration.
              }
            }
          }
        }
        stage('Simulation clang-7 SGX1 Debug') {
          agent {
            docker {
              image 'oetools-azure:1.6'
            }
          }
          steps {
            timeout(15) {
              sh './scripts/test-build-config -b Debug --compiler=clang-7'
            }
          }
        }
        stage('Simulation clang-7 SGX1 Release') {
          agent {
            docker {
              image 'oetools-azure:1.6'
            }
          }
          steps {
            timeout(15) {
              sh './scripts/test-build-config -p SGX1 -b Release --compiler=clang-7'
            }
          }
        }
        stage('Simulation clang-7 SGX1 RelWithDebInfo') {
          agent {
            docker {
              image 'oetools-azure:1.6'
            }
          }
          steps {
            timeout(15) {
              sh './scripts/test-build-config -p SGX1 -b RelWithDebInfo --compiler=clang-7'
            }
          }
        }
        stage('Simulation clang-7 SGX1-FLC Debug') {
          agent {
            docker {
              image 'oetools-azure:1.6'
            }
          }
          steps {
            timeout(15) {
              sh './scripts/test-build-config -p SGX1FLC -b Debug --compiler=clang-7'
            }
          }
        }
        stage('Simulation clang-7 SGX1-FLC Release') {
          agent {
            docker {
              image 'oetools-azure:1.6'
            }
          }
          steps {
            timeout(15) {
              sh './scripts/test-build-config -p SGX1FLC -b Release --compiler=clang-7'
            }
          }
        }
        stage('Simulation clang-7 SGX1-FLC RelWithDebInfo') {
          agent {
            docker {
              image 'oetools-azure:1.6'
            }
          }
          steps {
            timeout(15) {
              sh './scripts/test-build-config -p SGX1FLC -b RelWithDebInfo --compiler=clang-7'
            }
          }
        }
        stage('Coffeelake clang-7 SGX1-FLC Debug') {
          agent {
            node {
              label 'hardware'
            }
          }
          steps {
            timeout(15) {
              sh './scripts/test-build-config -p SGX1FLC -b Debug -d --compiler=clang-7'
            }
          }
        }
        stage('Coffeelake clang-7 SGX1-FLC Release') {
          agent {
            node {
              label 'hardware'
            }
          }
          steps {
            timeout(15) {
              sh './scripts/test-build-config -p SGX1FLC -b Release -d --compiler=clang-7'
            }
          }
        }
        stage('Coffeelake clang-7 SGX1-FLC RelWithDebInfo') {
          agent {
            node {
              label 'hardware'
            }
          }
          steps {
            timeout(15) {
              sh './scripts/test-build-config -p SGX1FLC -b RelWithDebInfo -d --compiler=clang-7'
            }
          }
        }
        stage('Coffeelake gcc SGX1-FLC Debug') {
          agent {
            node {
              label 'hardware'
            }
          }
          steps {
            timeout(15) {
              sh './scripts/test-build-config -p SGX1FLC -b Debug -d --compiler=gcc'
            }
          }
        }
        stage('Coffeelake gcc SGX1-FLC Release') {
          agent {
            node {
              label 'hardware'
            }
          }
          steps {
            timeout(15) {
              sh './scripts/test-build-config -p SGX1FLC -b Release -d --compiler=gcc'
            }
          }
        }
        stage('Coffeelake gcc SGX1-FLC RelWithDebInfo') {
          agent {
            node {
              label 'hardware'
            }
          }
          steps {
            timeout(15) {
              sh './scripts/test-build-config -p SGX1FLC -b RelWithDebInfo -d --compiler=gcc'
            }
          }
        }
        stage('Windows Debug Cross-platform') {
          stages {
            stage('Linux SGX1 Debug') {
              agent {
                docker {
                  image 'oetools-azure:1.6'
                }
              }
              steps {
                timeout(15) {
                  sh './scripts/test-build-config -p SGX1FLC -b Debug --compiler=clang-7'
                  stash includes: 'build/tests/**', name: 'linuxdebug'
                }
              }
            }
            stage('Windows Debug') {
              agent {
                node {
                  label 'SGXFLC-Windows'
                }
              }
              steps {
                unstash 'linuxdebug'
                bat 'move build linuxbin'
                bat 'mkdir build && cd build && cmake -G "Visual Studio 15 2017 Win64" -DADD_WINDOWS_ENCLAVE_TESTS=1 -DLINUX_BIN_DIR=%cd%\\linuxbin\\tests .. && pushd . && "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\BuildTools\\Common7\\Tools\\LaunchDevCmd.bat" && popd && cmake --build . --config Debug && ctest -V -C Debug'
              }
            }
          }
        }
        stage('Windows Release Cross-platform') {
          stages {
            stage('Linux SGX1 Release') {
              agent {
                docker {
                  image 'oetools-azure:1.6'
                }
              }
              steps {
                timeout(15) {
                  sh './scripts/test-build-config -p SGX1FLC -b Release --compiler=clang-7'
                  stash includes: 'build/tests/**', name: 'linuxrelease'
                }
              }
            }
            stage('Windows Release') {
              agent {
                node {
                  label 'SGXFLC-Windows'
                }
              }
              steps {
                unstash 'linuxrelease'
                bat 'move build linuxbin'
                bat 'mkdir build && cd build && cmake -G "Visual Studio 15 2017 Win64" -DADD_WINDOWS_ENCLAVE_TESTS=1 -DLINUX_BIN_DIR=%cd%\\linuxbin\\tests .. && pushd . && "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\BuildTools\\Common7\\Tools\\LaunchDevCmd.bat" && popd && cmake --build . --config Release && ctest -V -C Release'
              }
            }
          }
        }
      }
    }
  }
}
