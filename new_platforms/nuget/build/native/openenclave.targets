<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

    <!-- Expose oeedger8r.exe -->
    <PropertyGroup>
        <OEEdger8rPath>$(MSBuildThisFileDirectory)..\..\tools\oeedger8r.exe</OEEdger8rPath>
        <OEIncludePath>$(MSBuildThisFileDirectory)include</OEIncludePath>
    </PropertyGroup>

    <!-- Relative paths to the Open Enclave SDK Libraries within the NuGet Package -->
    <PropertyGroup>
        <SgxHwX86Dbg>$(MSBuildThisFileDirectory)..\..\lib\native\v141\sgx\hw\x86\Debug</SgxHwX86Dbg>
        <SgxHwX64Dbg>$(MSBuildThisFileDirectory)..\..\lib\native\v141\sgx\hw\x64\Debug</SgxHwX64Dbg>

        <SgxSimX86Dbg>$(MSBuildThisFileDirectory)..\..\lib\native\v141\sgx\sim\x86\Debug</SgxSimX86Dbg>
        <SgxSimX64Dbg>$(MSBuildThisFileDirectory)..\..\lib\native\v141\sgx\sim\x64\Debug</SgxSimX64Dbg>

        <TzHwArmDbg>$(MSBuildThisFileDirectory)..\..\lib\native\v141\tz\hw\arm\Debug</TzHwArmDbg>

        <OpteeSimX86Dbg>$(MSBuildThisFileDirectory)..\..\lib\native\v141\tz\sim\x86\Debug</OpteeSimX86Dbg>
    </PropertyGroup>

    <!-- List of SGX libraries for Enclaves and Hosts -->
    <PropertyGroup>
        <SgxLibsT>sgx_tstdc.lib;sgx_tprotected_fs.lib;sgx_tcxx.lib;sgx_tstdc.lib;sgx_tcrypto.lib</SgxLibsT>
        <SgxHwLibsT>$(SgxLibsT);sgx_trts.lib;sgx_tservice.lib</SgxHwLibsT>
        <SgxSimLibsT>$(SgxLibsT);sgx_trts_sim.lib;sgx_tservice_sim.lib</SgxSimLibsT>

        <SgxLibsU>sgx_uprotected_fs.lib</SgxLibsU>
        <SgxHwLibsU>$(SgxLibsU);sgx_urts.lib;sgx_uae_service.lib</SgxHwLibsU>
        <SgxSimLibsU>$(SgxLibsU);sgx_urts_sim.lib;sgx_uae_service_sim.lib</SgxSimLibsU>
    </PropertyGroup>

    <!-- Architecture Shorthands -->
    <Choose>
        <When Condition="'$(Platform)' == 'Win32' Or '$(Platform)' == 'x86'">
            <PropertyGroup>
                <IsX86>True</IsX86>
                <IsX64>False</IsX64>
                <IsARM>False</IsARM>
            </PropertyGroup>
        </When>
        <When Condition="'$(Platform)' == 'x64'">
            <PropertyGroup>
                <IsX86>False</IsX86>
                <IsX64>True</IsX64>
                <IsARM>False</IsARM>
            </PropertyGroup>
        </When>
        <When Condition="'$(Platform)' == 'ARM'">
            <PropertyGroup>
                <IsX86>False</IsX86>
                <IsX64>False</IsX64>
                <IsARM>True</IsARM>
            </PropertyGroup>
        </When>
    </Choose>

    <!-- TEE Shorthands -->
    <Choose>
        <When Condition="('$(Configuration)' == 'Debug' Or '$(Configuration)' == 'Release' Or '$(Configuration)' == 'SGX-Debug') And ($(IsX86) == True Or $(IsX64) == True)">
            <PropertyGroup>
                <IsSgx>True</IsSgx>
                <IsTz>False</IsTz>
                <IsSim>False</IsSim>
            </PropertyGroup>
        </When>
        <When Condition="('$(Configuration)' == 'Simulation' Or '$(Configuration)' == 'SGX-Simulation-Debug') And ($(IsX86) == True Or $(IsX64) == True)">
            <PropertyGroup>
                <IsSgx>True</IsSgx>
                <IsTz>False</IsTz>
                <IsSim>True</IsSim>
            </PropertyGroup>
        </When>
        <When Condition="('$(Configuration)' == 'Debug' Or '$(Configuration)' == 'Release' Or '$(Configuration)' == 'TZ-OPTEE-Debug') And ($(IsARM) == True)">
            <PropertyGroup>
                <IsSgx>False</IsSgx>
                <IsTz>True</IsTz>
                <IsSim>False</IsSim>
            </PropertyGroup>
        </When>
        <When Condition="('$(Configuration)' == 'OPTEE-Simulation-Debug') And ($(IsX86) == True)">
            <PropertyGroup>
                <IsSgx>False</IsSgx>
                <IsTz>True</IsTz>
                <IsSim>True</IsSim>
            </PropertyGroup>
        </When>
    </Choose>
    
    <!-- Configure SGX Enclave Compilation and Linking, except x86-OPTEE-Simulation-Debug -->
    <ItemDefinitionGroup Condition="'$(OEType)' == 'Enclave' And !($(IsTz) == True And $(IsSim) == True)">
        <ClCompile>
            <IgnoreStandardIncludePath>True</IgnoreStandardIncludePath>
            <BasicRuntimeChecks>Default</BasicRuntimeChecks>
        </ClCompile>
        <Link>
            <IgnoreAllDefaultLibraries>True</IgnoreAllDefaultLibraries>
            <SubSystem>NotSet</SubSystem>
            <NoEntryPoint>True</NoEntryPoint>
        </Link>
    </ItemDefinitionGroup>

    <!-- Additional Include Directories for Enclaves and Hosts -->
    <ItemDefinitionGroup>
        <ClCompile>
            <AdditionalIncludeDirectories>
                $(MSBuildThisFileDirectory)include;$(MSBuildThisFileDirectory)include\new_platforms;%(AdditionalIncludeDirectories)
            </AdditionalIncludeDirectories>
        </ClCompile>
    </ItemDefinitionGroup>

    <!-- Additional Include Directories for Enclaves only -->

    <!-- *-SGX-Debug and *-SGX-Simulation-Debug -->
    <ItemDefinitionGroup Condition="'$(OEType)' == 'Enclave' And $(IsSgx) == True">
        <ClCompile>
            <AdditionalIncludeDirectories>
                $(SGXSDKInstallPath)include;$(SGXSDKInstallPath)include\tlibc;$(SGXSDKInstallPath)include\libc++;$(MSBuildThisFileDirectory)include\new_platforms\sgx\enclave;%(AdditionalIncludeDirectories)
            </AdditionalIncludeDirectories>
        </ClCompile>
    </ItemDefinitionGroup>

    <!-- x86-OPTEE-Simulation-Debug -->
    <ItemDefinitionGroup Condition="'$(OEType)' == 'Enclave' And $(IsTz) == True And $(IsSim) == True">
        <ClCompile>
            <AdditionalIncludeDirectories>
                $(MSBuildThisFileDirectory)include\new_platforms\optee\enclave\Simulator;$(MSBuildThisFileDirectory)include\new_platforms\optee\enclave;$(MSBuildThisFileDirectory)include\new_platforms\optee;%(AdditionalIncludeDirectories)
            </AdditionalIncludeDirectories>
        </ClCompile>
    </ItemDefinitionGroup>

    <!-- Additional Include Directories for Hosts Only -->

    <!-- *-SGX-Debug and *-SGX-Simulation-Debug -->
    <ItemDefinitionGroup Condition="'$(OEType)' != 'Enclave' And $(IsSgx) == True">
        <ClCompile>
            <AdditionalIncludeDirectories>
                $(SGXSDKInstallPath)include;%(AdditionalIncludeDirectories)
            </AdditionalIncludeDirectories>
        </ClCompile>
    </ItemDefinitionGroup>

    <!-- Preprocessor Definitions for Enclaves Only -->
    <ItemDefinitionGroup Condition="'$(OEType)' == 'Enclave'">
        <ClCompile>
            <!-- SGX Hardware and Simulation -->
            <PreprocessorDefinitions Condition="$(IsSgx) == True">
                OE_NO_SAL;%(PreprocessorDefinitions)
            </PreprocessorDefinitions>

            <!-- OP-TEE Simulation -->
            <PreprocessorDefinitions Condition="$(IsTz) == True And $(IsSim) == True">
                OE_SIMULATE_OPTEE;%(PreprocessorDefinitions)
            </PreprocessorDefinitions>
        </ClCompile>
    </ItemDefinitionGroup>

    <!-- Preprocessor Definitions for Hosts Only -->
    <ItemDefinitionGroup Condition="'$(OEType)' != 'Enclave'">
        <ClCompile>
            <!-- OP-TEE Simulation -->
            <PreprocessorDefinitions Condition="$(IsTz) == True And $(IsSim) == True">
                OE_SIMULATE_OPTEE;%(PreprocessorDefinitions)
            </PreprocessorDefinitions>
        </ClCompile>
    </ItemDefinitionGroup>

    <!-- Additional Library Directories for Enclaves and Hosts -->
    <ItemDefinitionGroup>
        <Link>
            <!-- x86-SGX-Debug & x86-SGX-Simulation-Debug -->
            <AdditionalLibraryDirectories Condition="$(IsSgx) == True And $(IsX86) == True">
                $(SGXSDKInstallPath)bin\Win32\Debug;%(AdditionalLibraryDirectories)
            </AdditionalLibraryDirectories>

            <!-- x64-SGX-Debug & x64-SGX-Simulation-Debug -->
            <AdditionalLibraryDirectories Condition="$(IsSgx) == True And $(IsX64) == True">
                $(SGXSDKInstallPath)bin\x64\Debug;%(AdditionalLibraryDirectories)
            </AdditionalLibraryDirectories>
        </Link>
    </ItemDefinitionGroup>

    <!-- Additional Dependencies for Enclaves -->
    <ItemDefinitionGroup Condition="'$(OEType)' == 'Enclave'">
        <Link>
            <!-- All, except OP-TEE Simulation -->
            <IgnoreAllDefaultLibraries Condition="!($(IsTz) == True And $(IsSim) == True)">True</IgnoreAllDefaultLibraries>

            <!-- x86-SGX-Debug -->
            <AdditionalDependencies Condition="$(IsSgx) == True And $(IsX86) == True">
                $(SgxHwX86Dbg)\oeenclave.lib;$(SgxHwX86Dbg)\oesocket_enc.lib;$(SgxHwX86Dbg)\oestdio_enc.lib;$(SgxHwLibsT)
            </AdditionalDependencies>

            <!-- x64-SGX-Debug -->
            <AdditionalDependencies Condition="$(IsSgx) == True And $(IsX64) == True">
                $(SgxHwX64Dbg)\oeenclave.lib;$(SgxHwX64Dbg)\oesocket_enc.lib;$(SgxHwX64Dbg)\oestdio_enc.lib;$(SgxHwLibsT)
            </AdditionalDependencies>

            <!-- x86-SGX-Simulation-Debug -->
            <AdditionalDependencies Condition="$(IsSgx) == True And $(IsX86) == True And $(IsSim) == True">
                $(SgxSimX86Dbg)\oeenclave.lib;$(SgxSimX86Dbg)\oesocket_enc.lib;$(SgxSimX86Dbg)\oestdio_enc.lib;$(SgxSimLibsT)
            </AdditionalDependencies>

            <!-- x64-SGX-Simulation-Debug -->
            <AdditionalDependencies Condition="$(IsSgx) == True And $(IsX64) == True And $(IsSim) == True">
                $(SgxSimX64Dbg)\oeenclave.lib;$(SgxSimX64Dbg)\oesocket_enc.lib;$(SgxSimX64Dbg)\oestdio_enc.lib;$(SgxSimLibsT)
            </AdditionalDependencies>

            <!-- x86-OPTEE-Simulation-Debug -->
            <AdditionalDependencies Condition="$(IsTz) == True And $(IsX86) == True And $(IsSim) == True">
                $(OpteeSimX86Dbg)\oeenclave.lib;$(OpteeSimX86Dbg)\oesocket_enc.lib;$(OpteeSimX86Dbg)\oestdio_enc.lib;$(OpteeSimX86Dbg)\oeenclave_opteesim.lib;onecore.lib;%(AdditionalDependencies)
            </AdditionalDependencies>
        </Link>
    </ItemDefinitionGroup>

    <!-- Additional Dependencies for Hosts -->
    <ItemDefinitionGroup Condition="'$(OEType)' != 'Enclave'">
        <Link>
            <!-- x86-SGX-Debug -->
            <AdditionalDependencies Condition="$(IsSgx) == True And $(IsX86) == True">
                $(SgxHwX86Dbg)\oehost.lib;$(SgxHwX86Dbg)\oesocket_host.lib;$(SgxHwX86Dbg)\oestdio_host.lib;onecore.lib;$(SgxHwLibsU);%(AdditionalDependencies)
            </AdditionalDependencies>

            <!-- x64-SGX-Debug -->
            <AdditionalDependencies Condition="$(IsSgx) == True And $(IsX64) == True">
                $(SgxHwX64Dbg)\oehost.lib;$(SgxHwX64Dbg)\oesocket_host.lib;$(SgxHwX64Dbg)\oestdio_host.lib;onecore.lib;$(SgxHwLibsU);%(AdditionalDependencies)
            </AdditionalDependencies>

            <!-- x86-SGX-Simulation-Debug -->
            <AdditionalDependencies Condition="$(IsSgx) == True And $(IsX86) == True And $(IsSim) == True">
                $(SgxSimX86Dbg)\oehost.lib;$(SgxSimX86Dbg)\oesocket_host.lib;$(SgxSimX86Dbg)\oestdio_host.lib;onecore.lib;$(SgxSimLibsU);%(AdditionalDependencies)
            </AdditionalDependencies>

            <!-- x64-SGX-Simulation-Debug -->
            <AdditionalDependencies Condition="$(IsSgx) == True And $(IsX64) == True And $(IsSim) == True">
                $(SgxSimX64Dbg)\oehost.lib;$(SgxSimX64Dbg)\oesocket_host.lib;$(SgxSimX64Dbg)\oestdio_host.lib;onecore.lib;$(SgxSimLibsU);%(AdditionalDependencies)
            </AdditionalDependencies>

            <!-- arm-TZ-OPTEE-Debug -->
            <AdditionalDependencies Condition="$(IsTz) == True And $(IsARM) == True">
                $(TzHwArmDbg)\oehost.lib;$(TzHwArmDbg)\oesocket_host.lib;$(TzHwArmDbg)\oestdio_host.lib;onecore.lib;rpcrt4.lib;%(AdditionalDependencies)
            </AdditionalDependencies>

            <!-- x86-OPTEE-Simulation-Debug -->
            <AdditionalDependencies Condition="$(IsTz) == True And $(IsX86) == True And $(IsSim) == True">
                $(OpteeSimX86Dbg)\oehost.lib;$(OpteeSimX86Dbg)\oesocket_host.lib;$(OpteeSimX86Dbg)\oestdio_host.lib;$(OpteeSimX86Dbg)\oehost_opteesim.lib;onecore.lib;rpcrt4.lib;%(AdditionalDependencies)
            </AdditionalDependencies>
        </Link>
    </ItemDefinitionGroup>

    <!-- Post-Build Events for Enclaves -->
    <ItemDefinitionGroup Condition="'$(OEType)' == 'Enclave'">
        <!-- *-SGX-Debug & *-SGX-Simulation-Debug -->
        <PostBuildEvent Condition="$(IsSgx) == True">
            <Command>
                "$(SGXSDKInstallPath)bin\win32\release\sgx_sign.exe" sign -key "$(ProjectDir)$(TargetName)_private.pem" -enclave "$(OutDir)$(TargetFileName)" -out "$(OutDir)$(TargetName).signed.dll" -config "$(ProjectDir)$(TargetName).config.xml"
            </Command>
            <Message>
                Sign the enclave for Intel SGX.
            </Message>
        </PostBuildEvent>
    </ItemDefinitionGroup>
    
</Project>